"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const superagent = require("superagent");
const ServiceClientBase_1 = require("./ServiceClientBase");
class HealthClient extends ServiceClientBase_1.ServiceClientBase {
    constructor() {
        super(...arguments);
        this.serviceName = 'health';
        this.baseRoute = 'health';
    }
    hasServerStarted() {
        return __awaiter(this, void 0, void 0, function* () {
            const services = yield this.discovery.findAll(this.serviceName);
            const healthPromises = services
                .map((service) => {
                const route = `http://${service.address}:${service.port}/health?thisInstance=true`;
                return this.executeRequest(superagent.get(route));
            });
            try {
                yield Promise.all(healthPromises);
                return true;
            }
            catch (err) {
            }
            return false;
        });
    }
}
exports.HealthClient = HealthClient;
//# sourceMappingURL=HealthClient.js.map